Elm.Feed = Elm.Feed || {};
Elm.Feed.make = function (_elm) {
   "use strict";
   _elm.Feed = _elm.Feed || {};
   if (_elm.Feed.values) return _elm.Feed.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $Html = Elm.Html.make(_elm),
   $Html$Attributes = Elm.Html.Attributes.make(_elm),
   $Item = Elm.Item.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm),
   $Static = Elm.Static.make(_elm);
   var _op = {};
   var headerStyle = $Html$Attributes.style(_U.list([{ctor: "_Tuple2",_0: "font-size",_1: "40px"}
                                                    ,{ctor: "_Tuple2",_0: "font-family",_1: "monospace"}
                                                    ,{ctor: "_Tuple2",_0: "display",_1: "flex"}
                                                    ,{ctor: "_Tuple2",_0: "width",_1: "60%"}
                                                    ,{ctor: "_Tuple2",_0: "text-align",_1: "left"}
                                                    ,{ctor: "_Tuple2",_0: "margin-left",_1: "auto"}
                                                    ,{ctor: "_Tuple2",_0: "margin-right",_1: "auto"}]));
   var update = F2(function (action,model) {
      var _p0 = action;
      switch (_p0.ctor)
      {case "Add": return _U.update(model,
           {todo: A2($List._op["::"],{ctor: "_Tuple2",_0: model.todoID,_1: A4($Item.init,_p0._0,_p0._1,_p0._2,_p0._3)},model.todo),todoID: model.todoID + 1});
         case "Remove": var _p5 = _p0._0;
           return _U.update(model,
           {todo: A2($List.filter,function (_p1) {    var _p2 = _p1;return !_U.eq(_p2._0,_p5);},model.todo)
           ,done: A2($List.filter,function (_p3) {    var _p4 = _p3;return !_U.eq(_p4._0,_p5);},model.done)});
         case "Next": return _U.cmp(model.focus,model.len) < 0 ? _U.update(model,{focus: model.focus + 1}) : _U.update(model,{focus: 0});
         case "Previous": return _U.cmp(model.focus,0) > 0 ? _U.update(model,{focus: model.focus - 1}) : _U.update(model,{focus: model.len});
         case "Modify": var updateItem = function (_p6) {
              var _p7 = _p6;
              var _p9 = _p7._1;
              var _p8 = _p7._0;
              return _U.eq(_p8,_p0._0) ? {ctor: "_Tuple2",_0: _p8,_1: A2($Item.update,_p0._1,_p9)} : {ctor: "_Tuple2",_0: _p8,_1: _p9};
           };
           return _U.update(model,{todo: A2($List.map,updateItem,model.todo),done: A2($List.map,updateItem,model.done)});
         default: return model;}
   });
   var AlterSort = {ctor: "AlterSort"};
   var Modify = F2(function (a,b) {    return {ctor: "Modify",_0: a,_1: b};});
   var viewItem = F2(function (address,_p10) {    var _p11 = _p10;return A2($Item.view,A2($Signal.forwardTo,address,Modify(_p11._0)),_p11._1);});
   var view = F2(function (address,model) {
      return A2($Html.div,
      _U.list([]),
      _U.list([A2($Html.h1,_U.list([headerStyle]),_U.list([$Html.text("Todo ")]))
              ,A2($Html.div,_U.list([]),A2($List.map,viewItem(address),model.todo))
              ,A2($Html.h1,_U.list([headerStyle]),_U.list([$Html.text("Done ")]))
              ,A2($Html.div,_U.list([]),A2($List.map,viewItem(address),model.done))]));
   });
   var Remove = function (a) {    return {ctor: "Remove",_0: a};};
   var Add = F4(function (a,b,c,d) {    return {ctor: "Add",_0: a,_1: b,_2: c,_3: d};});
   var Next = {ctor: "Next"};
   var Previous = {ctor: "Previous"};
   var bulk_init_email = function (record) {    return A4($Item.init,false,false,record.body,$Static.get_other_email_attributes(record));};
   var bulk_init_reminder = function (record) {    return A4($Item.init,false,false,record.body,$Static.get_other_reminder_attributes(record));};
   var initialize = A3($List.map2,
   F2(function (v0,v1) {    return {ctor: "_Tuple2",_0: v0,_1: v1};}),
   _U.list([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19]),
   A2($List.append,A2($List.map,bulk_init_reminder,$Static.reminders),A2($List.map,bulk_init_email,$Static.emails)));
   var Model = F6(function (a,b,c,d,e,f) {    return {focus: a,len: b,todo: c,done: d,todoID: e,doneID: f};});
   var init = function () {    var wut = initialize;return A6(Model,0,$List.length(wut),wut,_U.list([]),$List.length(wut),0);}();
   return _elm.Feed.values = {_op: _op
                             ,Model: Model
                             ,init: init
                             ,initialize: initialize
                             ,bulk_init_reminder: bulk_init_reminder
                             ,bulk_init_email: bulk_init_email
                             ,Previous: Previous
                             ,Next: Next
                             ,Add: Add
                             ,Remove: Remove
                             ,Modify: Modify
                             ,AlterSort: AlterSort
                             ,update: update
                             ,view: view
                             ,viewItem: viewItem
                             ,headerStyle: headerStyle};
};