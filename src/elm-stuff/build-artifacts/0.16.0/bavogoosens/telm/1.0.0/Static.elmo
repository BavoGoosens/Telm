Elm.Static = Elm.Static || {};
Elm.Static.make = function (_elm) {
   "use strict";
   _elm.Static = _elm.Static || {};
   if (_elm.Static.values) return _elm.Static.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm);
   var _op = {};
   var get_other_email_attributes = function (_p0) {
      var _p1 = _p0;
      return _U.list([{ctor: "_Tuple2",_0: "to",_1: _p1.to}
                     ,{ctor: "_Tuple2",_0: "from",_1: _p1.from}
                     ,{ctor: "_Tuple2",_0: "title",_1: _p1.title}
                     ,{ctor: "_Tuple2",_0: "body",_1: _p1.body}
                     ,{ctor: "_Tuple2",_0: "date",_1: _p1.date}]);
   };
   var get_other_reminder_attributes = function (_p2) {
      var _p3 = _p2;
      return _U.list([{ctor: "_Tuple2",_0: "body",_1: _p3.body},{ctor: "_Tuple2",_0: "created",_1: _p3.created}]);
   };
   var emails = _U.list([{from: "bossman@corporate.me"
                         ,to: "manager@corporate.me"
                         ,title: "Corporate Ipsum"
                         ,body: "Collaboratively administrate empowered markets via plug-and-play\n                networks. Dynamically procrastinate B2C users after installed base\n                benefits. Dramatically visualize customer directed convergence without\n                revolutionary ROI.\n\n                Efficiently unleash cross-media information without cross-media\n                value. Quickly maximize timely deliverables for real-time\n                schemas. Dramatically maintain clicks-and-mortar solutions\n                without functional solutions.\n\n                Completely synergize resource taxing relationships via premier\n                niche markets. Professionally cultivate one-to-one customer\n                service with robust ideas. Dynamically innovate\n                resource-leveling customer service for state of the art customer\n                service."
                         ,date: "2015-01-30"}
                        ,{from: "hello@test.me"
                         ,to: "goodbye@test.me"
                         ,title: "Shorter than 200"
                         ,body: "This is the body of an email with less than 200 characters."
                         ,date: "2015-09-30"}]);
   var reminders = _U.list([{body: "Take out the trash",created: "2016-09-30"},{body: "Groceries",created: "2015-09-25"}]);
   var Reminder = F2(function (a,b) {    return {body: a,created: b};});
   var Email = F5(function (a,b,c,d,e) {    return {from: a,to: b,title: c,body: d,date: e};});
   return _elm.Static.values = {_op: _op
                               ,Email: Email
                               ,Reminder: Reminder
                               ,reminders: reminders
                               ,emails: emails
                               ,get_other_reminder_attributes: get_other_reminder_attributes
                               ,get_other_email_attributes: get_other_email_attributes};
};