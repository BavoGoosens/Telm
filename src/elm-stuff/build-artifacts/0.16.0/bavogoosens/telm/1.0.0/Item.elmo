Elm.Item = Elm.Item || {};
Elm.Item.make = function (_elm) {
   "use strict";
   _elm.Item = _elm.Item || {};
   if (_elm.Item.values) return _elm.Item.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $Html = Elm.Html.make(_elm),
   $Html$Attributes = Elm.Html.Attributes.make(_elm),
   $Html$Events = Elm.Html.Events.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm),
   $String = Elm.String.make(_elm);
   var _op = {};
   var bodyStyle = $Html$Attributes.style(_U.list([{ctor: "_Tuple2",_0: "font-size",_1: "20px"}
                                                  ,{ctor: "_Tuple2",_0: "font-family",_1: "monospace"}
                                                  ,{ctor: "_Tuple2",_0: "display",_1: "inline-block"}
                                                  ,{ctor: "_Tuple2",_0: "width",_1: "400px"}
                                                  ,{ctor: "_Tuple2",_0: "text-align",_1: "center"}]));
   var update = F2(function (action,model) {
      var _p0 = action;
      switch (_p0.ctor)
      {case "Pin": return _U.update(model,{pinned: $Basics.not(model.pinned)});
         case "Done": return _U.update(model,{done: $Basics.not(model.done)});
         default: return model.truncable && _U.cmp($String.length(model.displayedText),200) < 1 ? _U.update(model,
           {displayedText: model.body}) : model.truncable && _U.cmp($String.length(model.displayedText),200) > 0 ? _U.update(model,
           {displayedText: A2($String.left,200,model.body)}) : model;}
   });
   var Done = {ctor: "Done"};
   var Truncate = {ctor: "Truncate"};
   var Pin = {ctor: "Pin"};
   var view = F2(function (address,model) {
      return A2($Html.div,
      _U.list([]),
      _U.list([A2($Html.div,_U.list([bodyStyle]),_U.list([$Html.text($Basics.toString(model.displayedText))]))
              ,A2($Html.button,_U.list([A2($Html$Events.onClick,address,Pin)]),_U.list([$Html.text("Pin")]))
              ,A2($Html.button,_U.list([A2($Html$Events.onClick,address,Done)]),_U.list([$Html.text("Mark Done")]))
              ,A2($Html.button,_U.list([A2($Html$Events.onClick,address,Truncate)]),_U.list([$Html.text("more")]))]));
   });
   var Model = F6(function (a,b,c,d,e,f) {    return {done: a,pinned: b,truncable: c,displayedText: d,body: e,params: f};});
   var init = F4(function (done,pinned,body,params) {
      return A6(Model,done,pinned,_U.cmp($String.length(body),200) > 0,A2($String.left,200,body),body,params);
   });
   return _elm.Item.values = {_op: _op,Model: Model,init: init,Pin: Pin,Truncate: Truncate,Done: Done,update: update,view: view,bodyStyle: bodyStyle};
};